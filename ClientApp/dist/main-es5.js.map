{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/data.service.ts","webpack:///src/app/document-form/document-form.component.ts","webpack:///src/app/document-form/document-form.component.html","webpack:///src/app/ticket-form/ticket-form.component.ts","webpack:///src/app/ticket-form/ticket-form.component.html","webpack:///src/app/tickets-table/tickets-table.component.ts","webpack:///src/app/tickets-table/tickets-table.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","dataService","tickets","docButtonIsDisable","ticketButtonIsDisable","spinnerIsHidden","responseStatusCode","error","status","console","log","hideSpinner","docNumber","currentDocNumber","currentTicketNumber","showSpinner","getTicketsByDocNumber","subscribe","data","handleError","input","ticketNumber","currentCheckboxValue","allTickets","getTicketsByTicket","documentButtonIsSelected","ticketButtonIsSelected","loadDataByDocNumber","blockTicketButton","loadDataByTicketNumber","blockDocumentButton","selector","templateUrl","styleUrls","providers","AppModule","imports","declarations","bootstrap","DataService","http","url","apiUrl","documentNumber","post","displayAllTickets","get","companyCode","options","responseType","DocumentFormComponent","searchTicketsEvent","inputIsSelected","emit","changes","buttonIsDisable","documentInput","nativeElement","value","inputChangeHandler","searchTickets","MyErrorStateMatcher","control","form","isSubmitted","submitted","invalid","dirty","touched","TicketFormComponent","searchTicketsByTicketEvent","ticketFormControl","pattern","matcher","ticketInput","callEvent","AirlineCompany","name","iataCode","TicketsTableComponent","displayedColumns","airlineCompanies","selectedCompany","requestCsvByDocNumber","saveFile","requestCsvByTicketNumber","currentCheckbox","file","blob","Blob","type","window","URL","createObjectURL","a","document","createElement","setAttribute","body","appendChild","href","download","click","getAirlineCompanies","downloadCsv","dataSource","environment","production","debug","platform","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport {DataService} from \"./data.service\";\r\nimport {Ticket} from \"./ticket\";\r\nimport {InputData} from \"./ticket-form/ticket-form.component\";\r\nimport {HttpErrorResponse} from \"@angular/common/http\";\r\n\r\n@Component({\r\n    selector: 'app',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css'],\r\n    providers: [DataService]\r\n})\r\nexport class AppComponent implements OnInit{\r\n    \r\n    tickets: Ticket[] = [];\r\n    docButtonIsDisable : boolean = true;\r\n    ticketButtonIsDisable : boolean = true;\r\n    spinnerIsHidden: boolean = true;\r\n    \r\n    currentDocNumber : string;\r\n    currentTicketNumber: string;\r\n    currentCheckboxValue: boolean;\r\n    \r\n    responseStatusCode : number = 200;\r\n    \r\n    constructor(private dataService: DataService) {}\r\n    \r\n    ngOnInit() {\r\n    }\r\n    \r\n    showSpinner() {\r\n        this.spinnerIsHidden = false;\r\n    }\r\n    \r\n    hideSpinner() {\r\n        this.spinnerIsHidden = true;\r\n    }\r\n    \r\n    handleError(error: HttpErrorResponse) {\r\n        this.responseStatusCode = error.status;\r\n        console.log(this.responseStatusCode);\r\n        this.hideSpinner();\r\n        this.tickets = [];\r\n    }\r\n    \r\n    loadDataByDocNumber(docNumber: string) {\r\n        this.currentDocNumber = docNumber;\r\n        this.currentTicketNumber = \"\";\r\n        \r\n        this.showSpinner();\r\n        this.dataService.getTicketsByDocNumber(docNumber).subscribe((data: Ticket[]) =>\r\n        {\r\n            this.tickets = data;\r\n            this.hideSpinner();\r\n        },\r\n            error => {\r\n            console.log(\"CAUGHT ERROR\", error);\r\n            this.handleError(error);\r\n            });\r\n    }\r\n    \r\n    loadDataByTicketNumber(input: InputData) {\r\n        this.currentTicketNumber = input.ticketNumber;\r\n        this.currentDocNumber = \"\";\r\n        this.currentCheckboxValue = input.allTickets;\r\n        \r\n        this.showSpinner();\r\n        this.dataService.getTicketsByTicket(input.ticketNumber, input.allTickets).subscribe((data: Ticket[]) =>\r\n        {\r\n            this.tickets = data;\r\n            this.hideSpinner();\r\n        });\r\n    }\r\n\r\n    blockTicketButton(documentButtonIsSelected: boolean) {\r\n        this.ticketButtonIsDisable = true;\r\n        this.docButtonIsDisable = !documentButtonIsSelected;\r\n    }\r\n    \r\n    blockDocumentButton(ticketButtonIsSelected: boolean) {\r\n        this.docButtonIsDisable = true;\r\n        this.ticketButtonIsDisable = !ticketButtonIsSelected;\r\n        \r\n    }\r\n}","<div class=\"main-container\">\r\n    <div class=\"left-column\">\r\n        <h2>Портал субсидированных перевозок</h2>\r\n        <ul class=\"options\">\r\n            <li>Поиск операций</li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"right-column\">\r\n        <h1>Поиск операций</h1>\r\n        <div class=\"forms\">\r\n            <div class=\"forms__by-document\">\r\n                <document-form style=\"float: left;\"\r\n                (searchTicketsEvent)=\"loadDataByDocNumber($event)\"\r\n                [buttonIsDisable]=\"docButtonIsDisable\"\r\n                (inputIsSelected)=\"blockTicketButton($event)\"\r\n                ></document-form>\r\n            </div>\r\n            <div class=\"forms__by-ticket\">\r\n                <ticket-form style=\"float: left;\" \r\n                 (searchTicketsByTicketEvent)=\"loadDataByTicketNumber($event)\" \r\n                 [buttonIsDisable]=\"ticketButtonIsDisable\"\r\n                 (inputIsSelected)=\"blockDocumentButton($event)\"\r\n                ></ticket-form>\r\n            </div>\r\n        </div>\r\n        <mat-spinner *ngIf=\"!spinnerIsHidden\"></mat-spinner>\r\n        <mat-label *ngIf=\"responseStatusCode==404 && tickets.length == 0\">Результат не найден</mat-label>\r\n        <mat-label *ngIf=\"responseStatusCode==0 && tickets.length == 0\">Сервер недоступен</mat-label>\r\n        <mat-label *ngIf=\"responseStatusCode==500 && tickets.length == 0\">Произошла ошибка на сервере (status code = 500)</mat-label>\r\n        <app-tickets-table [dataSource]=\"tickets\" *ngIf=\"spinnerIsHidden && tickets.length > 0\"\r\n                            [currentDocNumber]=\"currentDocNumber\"\r\n                           [currentTicketNumber]=\"currentTicketNumber\"\r\n                           [currentCheckbox]=\"currentCheckboxValue\"\r\n        ></app-tickets-table>\r\n        \r\n    </div>\r\n</div>","import { NgModule }      from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { AppComponent }   from './app.component';\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\n\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\n\r\nimport { DocumentFormComponent } from './document-form/document-form.component';\r\nimport { TicketFormComponent } from './ticket-form/ticket-form.component';\r\nimport { TicketsTableComponent } from './tickets-table/tickets-table.component'\r\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\r\nimport {MatSelectModule} from \"@angular/material/select\";\r\n\r\n\r\n@NgModule({\r\n    imports: [BrowserModule, FormsModule, HttpClientModule,\r\n        MatGridListModule, MatButtonModule, MatInputModule,\r\n        MatTableModule, BrowserAnimationsModule, MatCheckboxModule,\r\n        MatProgressSpinnerModule, ReactiveFormsModule, MatSelectModule],\r\n    declarations: [ AppComponent , DocumentFormComponent, \r\n                    TicketsTableComponent, TicketFormComponent], \r\n    bootstrap:    [ AppComponent ]\r\n})\r\nexport class AppModule { }","import {Injectable} from \"@angular/core\";\r\nimport {HttpClient, HttpHeaders, HttpParams} from \"@angular/common/http\";\r\nimport {environment} from \"../environments/environment\";\r\n\r\n\r\n@Injectable()\r\nexport class DataService {\r\n    private url = environment.apiUrl;\r\n    constructor(private http: HttpClient) { }\r\n    \r\n    getTicketsByDocNumber(documentNumber: string) {\r\n        console.log(this.url);\r\n        return this.http.post(this.url + \"/by_doc_number\", {\r\n            documentNumber\r\n        });\r\n    }\r\n    \r\n    getTicketsByTicket(ticketNumber: string, displayAllTickets: boolean = false) {\r\n        return this.http.post(this.url + \"/by_ticket_number\", {\r\n            ticketNumber,\r\n            displayAllTickets\r\n        });\r\n    }\r\n    \r\n    getAirlineCompanies() {\r\n        return this.http.get(this.url + \"/airline_companies\");\r\n    }\r\n    \r\n    requestCsvByDocNumber(docNumber: string, companyCode: string) {\r\n        const options: {\r\n            headers?: HttpHeaders;\r\n            observe?: 'body';\r\n            params?: HttpParams;\r\n            reportProgress?: boolean;\r\n            responseType: 'arraybuffer';\r\n            withCredentials?: boolean;\r\n        } = {\r\n            responseType: 'arraybuffer'\r\n        };\r\n\r\n        return this.http.post(this.url + \"/xlsx_by_doc\", {\r\n                docNumber,\r\n                companyCode\r\n            }, options);\r\n    }\r\n\r\n    requestCsvByTicketNumber(ticketNumber: string, companyCode: string, allTickets: boolean) {\r\n        const options: {\r\n            headers?: HttpHeaders;\r\n            observe?: 'body';\r\n            params?: HttpParams;\r\n            reportProgress?: boolean;\r\n            responseType: 'arraybuffer';\r\n            withCredentials?: boolean;\r\n        } = {\r\n            responseType: 'arraybuffer'\r\n        };\r\n\r\n        return this.http.post(this.url + \"/xlsx_by_ticket\", {\r\n            ticketNumber,\r\n            companyCode,\r\n            allTickets\r\n        }, options);\r\n    }\r\n    \r\n    \r\n}","import {Component, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output, ViewChild} from '@angular/core';\n\n@Component({\n  selector: 'document-form',\n  templateUrl: './document-form.component.html',\n  styleUrls: ['./document-form.component.css']\n})\nexport class DocumentFormComponent implements OnInit, OnChanges {\n  @Output() searchTicketsEvent = new EventEmitter<string>();\n  \n  // ????\n  @Input() buttonIsDisable : boolean;\n  \n  @Output() inputIsSelected = new EventEmitter<boolean>();\n\n  @ViewChild('documentInput') documentInput: ElementRef;\n  \n  constructor() { }\n\n  searchTickets(docNumber: string) {\n    this.searchTicketsEvent.emit(docNumber);\n  }\n  \n  ngOnChanges(changes) {\n    // if other input is selected\n    if (this.buttonIsDisable && this.documentInput) {\n      this.documentInput.nativeElement.value = '';\n      this.inputChangeHandler();\n    }\n  }\n\n  inputChangeHandler() {\n      this.inputIsSelected.emit(this.documentInput.nativeElement.value != '');\n  }\n  \n  ngOnInit(): void {\n  }\n\n}\n","<strong>По номеру документа</strong>\n\n<mat-form-field>\n    <mat-label>Серия и номер документа</mat-label>\n    <input matInput type=\"text\" id=\"document-input\"\n           (input)=\"inputChangeHandler()\"\n           \n           #documentInput>\n    \n</mat-form-field>\n<button mat-raised-button class=\"search-btn\" style=\"margin-top: 59px;\" color=\"primary\" [disabled]=\"buttonIsDisable\"\n        (click)=\"searchTickets(documentInput.value);documentInput.value=''; inputChangeHandler()\"\n\n>Найти</button>\n","import {Component, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output, ViewChild} from '@angular/core';\nimport {ErrorStateMatcher} from \"@angular/material/core\";\nimport {FormControl, FormGroupDirective, NgForm, Validators} from \"@angular/forms\";\n\nexport interface InputData {\n  ticketNumber: string,\n  allTickets: boolean\n}\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n@Component({\n  selector: 'ticket-form',\n  templateUrl: './ticket-form.component.html',\n  styleUrls: ['./ticket-form.component.css']\n})\nexport class TicketFormComponent implements OnInit, OnChanges {\n  @Output() searchTicketsByTicketEvent = new EventEmitter<InputData>();\n  \n  @Input() buttonIsDisable : boolean;\n  @Output() inputIsSelected = new EventEmitter<boolean>();\n  \n  @ViewChild('ticketInput') ticketInput: ElementRef;\n\n  ticketFormControl = new FormControl('', [Validators.pattern(\"[a-zA-Z0-9]{13}\")]);\n\n  matcher = new MyErrorStateMatcher();\n  \n  callEvent(ticketNumber: string, allTickets: boolean) {\n    this.searchTicketsByTicketEvent.emit({ticketNumber, allTickets});\n  }\n  \n  inputChangeHandler() {\n      this.inputIsSelected.emit(this.ticketInput.nativeElement.value != '');\n  }\n\n  ngOnChanges(changes) {\n    if (this.buttonIsDisable) {\n      this.ticketInput.nativeElement.value = '';\n      this.inputChangeHandler();\n    }\n  }\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<strong>По номеру билета</strong>\n<mat-form-field>\n    <mat-label>Серия и номер билета</mat-label>\n    <input matInput [formControl]=\"ticketFormControl\" [errorStateMatcher]=\"matcher\" type=\"text\" id=\"ticket-input\"\n           (input)=\"inputChangeHandler()\"\n           #ticketInput\n    >\n    <mat-error *ngIf=\"ticketFormControl.hasError('pattern')\">\n        Номер билета должен содержать 13 символов: цифры и латинские буквы\n    </mat-error>\n</mat-form-field>\n\n<mat-checkbox color=\"primary\" #checkbox>Все билеты пассажира</mat-checkbox>\n<button mat-raised-button color=\"primary\" class=\"search-btn\" style=\"margin-top: 10px;\"\n        (click)=\"callEvent(ticketInput.value, checkbox.checked); ticketInput.value=''; inputChangeHandler();\"\n        [disabled]=\"buttonIsDisable || ticketFormControl.hasError('pattern')\"\n\n>Найти</button>","import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {Ticket} from \"../ticket\";\nimport {DataService} from \"../data.service\";\nimport { saveAs } from 'file-saver';\nimport * as XLSX from \"xlsx\" ;\n\nexport class AirlineCompany {\n  constructor(\n      public name: string,\n      public iataCode: string\n  ) { }\n}\n\n@Component({\n  selector: 'app-tickets-table',\n  templateUrl: './tickets-table.component.html',\n  styleUrls: ['./tickets-table.component.css'],\n  providers: [DataService]\n})\nexport class TicketsTableComponent implements OnInit {\n  @Input() dataSource : Ticket[];\n  \n  @Input() currentDocNumber: string;\n  @Input() currentTicketNumber: string;\n  @Input() currentCheckbox: boolean;\n  \n  displayedColumns: string[] = [\"passengerDocNumber\", \"surname\", \"name\",\n    \"sender\", \"validationStatus\", \"time\", \"type\", \"ticketNumber\",\n    \"departDatetime\", \"airlineCode\", \"cityFromName\", \"cityToName\"\n  ];\n  \n  airlineCompanies : AirlineCompany[] = [];\n  // airlineCompanies : AirlineCompany[] = [\n  //   {name: \"АО \\\"Авиакомпания \\\"Азимут\\\"\\\"\", code: \"A4\"},\n  //   {name: \"АО \\\"Авиакомпания \\\"Икар\\\"\\\"\", code: \"EO\"},\n  //   {name: \"АО \\\"Авиакомпания \\\"Россия\\\"\\\"\", code: \"FV\"},\n  //   {name: \"АО \\\"Авиакомпания \\\"Сибирь\\\"\\\"\", code: \"S7\"},\n  //   {name: \"АО \\\"Авиакомпания \\\"Якутия\\\"\\\"\", code: \"R3\"},\n  //   {name: \"АО \\\"Авиакомпания АЛРОСА\\\"\", code: \"6R\"},\n  //   {name: \"АО \\\"АК НордСтар\\\"\", code: \"Y7\"},\n  //   {name: \"АО \\\"АК Смартавиа\\\"\", code: \"5N\"},\n  //   {name: \"АО \\\"ИрАэро\\\"\", code: \"IO\"},\n  //   {name: \"АО \\\"Ред Вингс\\\"\", code: \"WZ\"},\n  //   {name: \"ОАО АК \\\"Уральские авиалинии\\\"\", code: \"U6\"},\n  //   {name: \"ООО \\\"Северный Ветер\\\"\", code: \"N4\"},\n  //   {name: \"ПАО \\\"Авиакомпания \\\"Ютэйр\\\"\\\"\", code: \"UT\"},\n  //   {name: \"ПАО \\\"Аэрофлот\\\"\", code: \"SU\"},\n  //   {name: \"АО \\\"Авиакомпания «Ижавиа»\\\"\", code: \"I8\"},\n  // ];\n  \n  \n  \n  selectedCompany : string = \"A4\";\n  downloadCsv(companyCode: string) {\n    if (this.currentDocNumber != \"\") {\n      this.dataService.requestCsvByDocNumber(this.currentDocNumber, companyCode).subscribe(data=> {\n        this.saveFile(data);\n      });\n    }\n    else {\n      this.dataService.requestCsvByTicketNumber(this.currentTicketNumber, companyCode, this.currentCheckbox).subscribe(data => {\n        this.saveFile(data);\n      });\n    }\n  }\n  \n  saveFile(file) {\n    const blob = new Blob([file], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" });\n    const url = window.URL.createObjectURL(blob);\n\n    // create hidden dom element (so it works in all browsers)\n    const a = document.createElement('a');\n    a.setAttribute('style', 'display:none;');\n    document.body.appendChild(a);\n\n    // create file, attach to hidden element and open hidden element\n    a.href = url;\n    a.download = \"report\";\n    a.click();\n  }\n  \n  constructor(private dataService: DataService) { }\n\n  ngOnInit(): void {\n    this.dataService.getAirlineCompanies().subscribe((data:AirlineCompany[]) => {\n      this.airlineCompanies = data;\n      this.selectedCompany = this.airlineCompanies[0].iataCode;\n    });\n  }\n}\n"," <button mat-raised-button color=\"primary\" \n         (click)=\"downloadCsv(selectedCompany)\"\n            style=\"margin-right: 50px;\">\n     Сохранить\n </button>\n\n<mat-label style=\"margin-right: 20px\">Для авиакомпании</mat-label>\n<mat-form-field appearance=\"fill\">\n    <mat-select [(value)]=\"selectedCompany\">\n        <mat-option *ngFor=\"let company of airlineCompanies\" [value]=\"company.iataCode\">\n            {{company.name + \"(\" + company.iataCode + \")\"}}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <ng-container matColumnDef=\"passengerDocNumber\">\n        <th mat-header-cell *matHeaderCellDef>Номер документа</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.passengerDocumentNumber}} </td>\n    </ng-container>\n\n\n    <ng-container matColumnDef=\"surname\">\n        <th mat-header-cell *matHeaderCellDef> Фамилия </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.surname}} </td>\n    </ng-container>\n\n\n    <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef> Имя </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n\n\n    <ng-container matColumnDef=\"sender\">\n        <th mat-header-cell *matHeaderCellDef> Отправитель </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.sender}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"validationStatus\">\n        <th mat-header-cell *matHeaderCellDef> Статус валидации </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.validationStatus}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"time\">\n        <th mat-header-cell *matHeaderCellDef> Дата операции </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.time}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"type\">\n        <th mat-header-cell *matHeaderCellDef> Тип операции </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.type}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"ticketNumber\">\n        <th mat-header-cell *matHeaderCellDef> Номер билета </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.ticketNumber}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"departDatetime\">\n        <th mat-header-cell *matHeaderCellDef> Время отправления </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.departDatetime}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"airlineCode\">\n        <th mat-header-cell *matHeaderCellDef> Код АК </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.airlineCode}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"cityFromName\">\n        <th mat-header-cell *matHeaderCellDef> Город отправления </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.cityFromName}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"cityToName\">\n        <th mat-header-cell *matHeaderCellDef> Город прибытия </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.cityToName}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>","export const environment = {\r\n\tproduction: false,\r\n\tapiUrl: window[\"env\"][\"apiUrl\"] || \"default\",\r\n\tdebug: window[\"env\"][\"debug\"] || false\r\n  };","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { AppModule } from './app/app.module';\r\n\r\nenableProdMode();\r\nconst platform = platformBrowserDynamic();\r\nplatform.bootstrapModule(AppModule);"]}